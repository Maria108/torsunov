{"ast":null,"code":"var _jsxFileName = \"/Users/murzik/Desktop/React learning/torsunov/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback, useContext } from 'react';\nimport ReactWaves, { Regions } from '@dschoon/react-waves';\nimport './add.css';\nimport { Context } from '../context';\nimport { PlayButton } from './PlayButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Player({\n  children,\n  mp3,\n  options = {\n    barGap: 3,\n    barWidth: 4,\n    barHeight: 2,\n    barRadius: 3,\n    cursorWidth: 0,\n    height: 60,\n    hideScrollbar: true,\n    progressColor: '#ff7606',\n    responsive: true,\n    waveColor: '#D1D6DA'\n  }\n}) {\n  _s();\n  const context = useContext(Context);\n  const wavesRef = useRef(null);\n  const [wavesurfer, setWavesurfer] = useState(null);\n  // const [playing, setPlaying] = useState(false);\n  const [pos, setPos] = useState(0);\n  const [regions, setRegions] = useState({\n    // One: {\n    //   id: 'One',\n    //   start: 40,\n    //   end: 140,\n    //   color: 'rgba(100, 149, 240, 0.3)',\n    // },\n  });\n  const onLoading = useCallback(({\n    wavesurfer,\n    originalArgs = []\n  }) => {\n    if (originalArgs[0] === 100) {\n      setWavesurfer(wavesurfer);\n    }\n  }, []);\n  const onPosChange = useCallback((newPos, wavesurfer) => {\n    if (newPos !== pos) {\n      setPos(newPos);\n      setWavesurfer(wavesurfer);\n    }\n  }, [pos]);\n  const secondsToPosition = useCallback(sec => {\n    return 1 / wavesurfer.getDuration() * sec;\n  }, [wavesurfer]);\n  const zoom = useCallback(direction => {\n    const currentZoom = wavesurfer.params.minPxPerSec;\n    if (direction === 'in') {\n      wavesurfer.zoom(currentZoom + 1);\n    } else if (direction === 'out' && currentZoom > 1) {\n      wavesurfer.zoom(currentZoom - 1);\n    }\n  }, [wavesurfer]);\n  const handleRegionClick = useCallback(e => {\n    setTimeout(() => {\n      wavesurfer.seekTo(secondsToPosition(e.originalArgs[0].start));\n    }, 50);\n  }, [wavesurfer, secondsToPosition]);\n  const handleResetAndToggle = toggle => {\n    if (toggle) {\n      context.handles.setPlaying(!context.state.playing);\n    } else {\n      context.handles.setPlaying(false);\n    }\n    if (wavesurfer) {\n      wavesurfer.seekTo(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactWaves, {\n        ref: wavesRef,\n        audioFile: mp3,\n        className: 'react-waves',\n        options: {\n          ...options\n        },\n        volume: 1,\n        zoom: 1,\n        pos: pos\n        // playing={context['state']['playing']}\n        ,\n        onPosChange: onPosChange,\n        onLoading: onLoading,\n        children: /*#__PURE__*/_jsxDEV(Regions, {\n          onSingleRegionUpdate: e => setRegions({\n            [e.region.id]: e.region\n          }),\n          onRegionClick: handleRegionClick\n          // onRegionOut={() => context.handles.setPlaying(false)}\n          ,\n          regions: regions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        handleResetAndToggle(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"x_track_controls\",\n        children: /*#__PURE__*/_jsxDEV(PlayButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"l+yu6pAfGBGpOqoht/PAnpfmFWk=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useState","useCallback","useContext","ReactWaves","Regions","Context","PlayButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","children","mp3","options","barGap","barWidth","barHeight","barRadius","cursorWidth","height","hideScrollbar","progressColor","responsive","waveColor","_s","context","wavesRef","wavesurfer","setWavesurfer","pos","setPos","regions","setRegions","onLoading","originalArgs","onPosChange","newPos","secondsToPosition","sec","getDuration","zoom","direction","currentZoom","params","minPxPerSec","handleRegionClick","e","setTimeout","seekTo","start","handleResetAndToggle","toggle","handles","setPlaying","state","playing","style","zIndex","ref","audioFile","className","volume","onSingleRegionUpdate","region","id","onRegionClick","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/murzik/Desktop/React learning/torsunov/src/components/Player.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useContext } from 'react';\nimport ReactWaves, { Regions } from '@dschoon/react-waves';\nimport './add.css';\nimport { Context } from '../context';\nimport { PlayButton } from './PlayButton';\n\nexport function Player({\n  children,\n  mp3,\n  options = {\n    barGap: 3,\n    barWidth: 4,\n    barHeight: 2,\n    barRadius: 3,\n    cursorWidth: 0,\n    height: 60,\n    hideScrollbar: true,\n    progressColor: '#ff7606',\n    responsive: true,\n    waveColor: '#D1D6DA',\n  }\n}) {\n  const context = useContext(Context);\n  const wavesRef = useRef(null);\n  const [wavesurfer, setWavesurfer] = useState(null);\n  // const [playing, setPlaying] = useState(false);\n  const [pos, setPos] = useState(0);\n  const [regions, setRegions] = useState({\n    // One: {\n    //   id: 'One',\n    //   start: 40,\n    //   end: 140,\n    //   color: 'rgba(100, 149, 240, 0.3)',\n    // },\n  });\n  const onLoading = useCallback(({ wavesurfer, originalArgs = [] }) => {\n    if (originalArgs[0] === 100) {\n      setWavesurfer(wavesurfer);\n    }\n  }, []);\n\n  const onPosChange = useCallback((newPos, wavesurfer) => {\n    if (newPos !== pos) {\n      setPos(newPos);\n      setWavesurfer(wavesurfer);\n    }\n  }, [pos]);\n\n  const secondsToPosition = useCallback((sec) => {\n    return 1 / wavesurfer.getDuration() * sec;\n  }, [wavesurfer]);\n\n  const zoom = useCallback((direction) => {\n    const currentZoom = wavesurfer.params.minPxPerSec;\n    if (direction === 'in') {\n      wavesurfer.zoom(currentZoom + 1);\n    } else if (direction === 'out' && currentZoom > 1) {\n      wavesurfer.zoom(currentZoom - 1);\n    }\n  }, [wavesurfer]);\n\n  const handleRegionClick = useCallback((e) => {\n    setTimeout(() => {\n      wavesurfer.seekTo(secondsToPosition(e.originalArgs[0].start));\n    }, 50);\n  }, [wavesurfer, secondsToPosition]);\n\n\n\n  const handleResetAndToggle = (toggle) => {\n    if (toggle) { context.handles.setPlaying(!context.state.playing) }\n    else { context.handles.setPlaying(false) }\n\n    if (wavesurfer) {\n      wavesurfer.seekTo(0);\n    }\n  };\n\n  return (\n\n    <>\n      <div style={{ zIndex: 0 }}>\n        <ReactWaves\n          ref={wavesRef}\n          audioFile={mp3}\n          className={'react-waves'}\n          options={{ ...options }}\n          volume={1}\n          zoom={1}\n          pos={pos}\n          // playing={context['state']['playing']}\n          onPosChange={onPosChange}\n          onLoading={onLoading}\n        >\n          <Regions\n            onSingleRegionUpdate={(e) => setRegions({ [e.region.id]: e.region })}\n            onRegionClick={handleRegionClick}\n            // onRegionOut={() => context.handles.setPlaying(false)}\n            regions={regions}\n          />\n        </ReactWaves>\n      </div>\n      <div onClick={() => {\n        handleResetAndToggle(true)\n      }}>\n        <div className=\"x_track_controls\">\n\n          <PlayButton />\n\n        </div>\n      </div>\n    </>\n\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}