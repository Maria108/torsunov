{"ast":null,"code":"var _jsxFileName = \"/Users/murzik/Desktop/React learning/torsunov/src/components/PlayerTop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useContext, useEffect, useRef, useLayoutEffect } from 'react';\nimport ReactWaves, { Regions } from '@dschoon/react-waves';\nimport './add.css';\nimport { Context } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerTop({\n  children\n}) {\n  _s();\n  const wavesContainerRef = useRef(null);\n  const context = useContext(Context);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [wavesurfer, setWavesurfer] = useState(null);\n\n  // const [playing, setPlaying] = useState(false);\n\n  const [pos, setPos] = useState(0);\n  const [regions, setRegions] = useState([...context['state']['zoomFragment']]);\n  const onLoading = useCallback(({\n    wavesurfer,\n    originalArgs = []\n  }) => {\n    setWavesurfer(wavesurfer);\n\n    // Get the duration of the audio\n    const duration = wavesurfer.getDuration();\n\n    // Calculate container width dynamically\n    const containerWidth = wavesContainerRef.current ? wavesContainerRef.current.offsetWidth : 0;\n\n    // Calculate the desired pixels per second\n    const desiredPixelsPerSecond = duration > 0 ? containerWidth / duration : 1;\n    setZoomLevel(desiredPixelsPerSecond);\n  }, [wavesContainerRef]);\n  const onPosChange = useCallback((newPos, wavesurfer) => {\n    if (newPos !== pos) {\n      setPos(newPos);\n      setWavesurfer(wavesurfer);\n    }\n  }, [pos]);\n  const secondsToPosition = useCallback(sec => {\n    return 1 / wavesurfer.getDuration() * sec;\n  }, [wavesurfer]);\n  const zoom = useCallback(direction => {\n    // if (!wavesurfer) return;  // Return early if wavesurfer is not defined\n\n    const currentZoom = wavesurfer.params.minPxPerSec;\n    if (direction === 'in') {\n      wavesurfer.zoom(currentZoom + 1);\n    } else if (direction === 'out' && currentZoom > 1) {\n      wavesurfer.zoom(currentZoom - 1);\n    }\n  }, [wavesurfer]);\n  const handleRegionClick = useCallback(e => {\n    setTimeout(() => {\n      if (wavesurfer) wavesurfer.seekTo(secondsToPosition(e.originalArgs[0].start));\n    }, 50);\n  }, [wavesurfer, secondsToPosition]);\n  useEffect(() => {\n    if (wavesurfer) {\n      wavesurfer.on('zoom', zoom => {\n        console.log('Zoom updated to:', zoom);\n      });\n    }\n  }, [wavesurfer]);\n  const adjustZoom = () => {\n    if (wavesurfer && wavesContainerRef.current) {\n      // Get the current width of the container\n      const containerWidth = wavesContainerRef.current.offsetWidth;\n\n      // Adjust the zoom based on the container width\n      const duration = wavesurfer.getDuration();\n      const desiredPixelsPerSecond = duration > 0 ? containerWidth / duration : 1;\n      wavesurfer.zoom(desiredPixelsPerSecond);\n    }\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      adjustZoom();\n      if (wavesurfer && typeof wavesurfer.drawBuffer === 'function') {\n        wavesurfer.drawBuffer();\n      }\n    };\n\n    // Add the event listener\n    window.addEventListener('resize', handleResize);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [wavesurfer, wavesContainerRef]);\n  useLayoutEffect(() => {\n    adjustZoom();\n  }, [wavesurfer, wavesContainerRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"x_player0\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"x_player\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"x_player_timeline0\",\n        ref: wavesContainerRef,\n        children: [children, /*#__PURE__*/_jsxDEV(ReactWaves, {\n          audioFile: context.state['mp3'],\n          className: 'react-waves'\n          //   options={{\n          //   height: 100,\n          //     hideScrollbar: true,\n          //     responsive: true,\n          // }}\n          ,\n          volume: 0,\n          options: {\n            // barGap: 3,\n            // barWidth: 4,\n            barHeight: 2,\n            barRadius: 3,\n            cursorWidth: 0,\n            height: 100,\n            hideScrollbar: true,\n            progressColor: '#ff7606',\n            responsive: true,\n            waveColor: '#D1D6DA'\n          },\n          zoom: zoomLevel,\n          pos: pos\n          // playing={context['state']['playing']}\n          // onPosChange={onPosChange}\n          // onLoading={onLoading}\n          ,\n          children: /*#__PURE__*/_jsxDEV(Regions, {\n            onSingleRegionUpdate: e => {\n              // console.log('e.region = ', e);\n              // console.log('e.region.start = ', e.region.start);\n              // console.log('e.region.end = ', e.region.end);\n\n              // setRegions({ [e.region.id]: e.region })\n              if (e.region.start !== regions[0] || e.region.end !== regions[1]) {\n                setRegions([e.region.start, e.region.end]);\n                context.handles['setZoomFragment']([Math.round(e.region.start), Math.round(e.region.end)]);\n              }\n            },\n            onRegionClick: handleRegionClick,\n            onRegionOut: () => context.handles.setPlaying(false),\n            regions: {\n              // One: {\n              //   id: 'One',\n              //   start: regions[0],\n              //   end: regions[1],\n              //   color: 'rgba(100, 149, 240, 0.3)',\n              // },\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerTop, \"+vrW/ZPChUF7rSheLkK1JAb+Q+o=\");\n_c = PlayerTop;\nvar _c;\n$RefreshReg$(_c, \"PlayerTop\");","map":{"version":3,"names":["React","useState","useCallback","useContext","useEffect","useRef","useLayoutEffect","ReactWaves","Regions","Context","jsxDEV","_jsxDEV","PlayerTop","children","_s","wavesContainerRef","context","zoomLevel","setZoomLevel","wavesurfer","setWavesurfer","pos","setPos","regions","setRegions","onLoading","originalArgs","duration","getDuration","containerWidth","current","offsetWidth","desiredPixelsPerSecond","onPosChange","newPos","secondsToPosition","sec","zoom","direction","currentZoom","params","minPxPerSec","handleRegionClick","e","setTimeout","seekTo","start","on","console","log","adjustZoom","handleResize","drawBuffer","window","addEventListener","removeEventListener","className","ref","audioFile","state","volume","options","barHeight","barRadius","cursorWidth","height","hideScrollbar","progressColor","responsive","waveColor","onSingleRegionUpdate","region","end","handles","Math","round","onRegionClick","onRegionOut","setPlaying","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/murzik/Desktop/React learning/torsunov/src/components/PlayerTop.js"],"sourcesContent":["import React, { useState, useCallback, useContext, useEffect, useRef, useLayoutEffect } from 'react';\nimport ReactWaves, { Regions } from '@dschoon/react-waves';\nimport './add.css';\nimport { Context } from '../context';\n\n\n\nexport function PlayerTop({ children }) {\n\n  const wavesContainerRef = useRef(null);\n\n  const context = useContext(Context);\n\n\n  const [zoomLevel, setZoomLevel] = useState(1);\n\n\n  const [wavesurfer, setWavesurfer] = useState(null);\n\n  // const [playing, setPlaying] = useState(false);\n\n\n  const [pos, setPos] = useState(0);\n  const [regions, setRegions] = useState([...context['state']['zoomFragment']]);\n\n\n\n\n\n\n\n  const onLoading = useCallback(({ wavesurfer, originalArgs = [] }) => {\n\n      setWavesurfer(wavesurfer);\n\n      // Get the duration of the audio\n      const duration = wavesurfer.getDuration();\n\n      // Calculate container width dynamically\n      const containerWidth = wavesContainerRef.current ? wavesContainerRef.current.offsetWidth : 0;\n\n      // Calculate the desired pixels per second\n    const desiredPixelsPerSecond = duration > 0 ? containerWidth / duration : 1;\n\n\n      setZoomLevel(desiredPixelsPerSecond);\n\n  }, [wavesContainerRef]);\n\n\n\n\n  const onPosChange = useCallback((newPos, wavesurfer) => {\n    if (newPos !== pos) {\n      setPos(newPos);\n      setWavesurfer(wavesurfer);\n    }\n  }, [pos]);\n\n  const secondsToPosition = useCallback((sec) => {\n    return 1 / wavesurfer.getDuration() * sec;\n  }, [wavesurfer]);\n\n  const zoom = useCallback((direction) => {\n    // if (!wavesurfer) return;  // Return early if wavesurfer is not defined\n\n    const currentZoom = wavesurfer.params.minPxPerSec;\n    if (direction === 'in') {\n      wavesurfer.zoom(currentZoom + 1);\n    } else if (direction === 'out' && currentZoom > 1) {\n      wavesurfer.zoom(currentZoom - 1);\n    }\n  }, [wavesurfer]);\n\n  const handleRegionClick = useCallback((e) => {\n    setTimeout(() => {\n      if (wavesurfer) wavesurfer.seekTo(secondsToPosition(e.originalArgs[0].start));\n    }, 50);\n  }, [wavesurfer, secondsToPosition]);\n\n\n  useEffect(() => {\n    if (wavesurfer) {\n      wavesurfer.on('zoom', (zoom) => {\n        console.log('Zoom updated to:', zoom);\n      });\n    }\n  }, [wavesurfer]);\n\n\n  const adjustZoom = () => {\n    if (wavesurfer && wavesContainerRef.current) {\n      // Get the current width of the container\n      const containerWidth = wavesContainerRef.current.offsetWidth;\n\n      // Adjust the zoom based on the container width\n      const duration = wavesurfer.getDuration();\n      const desiredPixelsPerSecond = duration > 0 ? containerWidth / duration : 1;\n\n      wavesurfer.zoom(desiredPixelsPerSecond);\n    }\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      adjustZoom();\n      if (wavesurfer && typeof wavesurfer.drawBuffer === 'function') {\n        wavesurfer.drawBuffer();\n      }\n    };\n\n    // Add the event listener\n    window.addEventListener('resize', handleResize);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [wavesurfer, wavesContainerRef]);\n\n  useLayoutEffect(() => {\n    adjustZoom();\n  }, [wavesurfer, wavesContainerRef]);\n\n\n\n\n\n\n  return (\n    <div className=\"x_player0\">\n\n      <div className='x_player'>\n        {/* <div className=\"x_player_control\">\n          <div className=\"x_player_control_play\" onClick={() => setPlaying(!playing)}>\n            {playing\n              ? <div className=\"ico ico--40\"><div>pause</div></div>\n              : <div className=\"ico ico--40\"><div>play_arrow</div></div>}\n          </div>\n        </div> */}\n        <div className=\"x_player_timeline0\" ref={wavesContainerRef}>\n          {children}\n        <ReactWaves\n            audioFile={context.state['mp3']}\n          className={'react-waves'}\n          //   options={{\n          //   height: 100,\n          //     hideScrollbar: true,\n          //     responsive: true,\n          // }}\n            volume={0}\n            options={{\n              // barGap: 3,\n              // barWidth: 4,\n              barHeight: 2,\n              barRadius: 3,\n              cursorWidth: 0,\n              height: 100,\n              hideScrollbar: true,\n              progressColor: '#ff7606',\n              responsive: true,\n              waveColor: '#D1D6DA',\n            }}\n            zoom={zoomLevel}\n            pos={pos}\n            // playing={context['state']['playing']}\n          // onPosChange={onPosChange}\n          // onLoading={onLoading}\n        >\n          <Regions\n            onSingleRegionUpdate={(e) => {\n              // console.log('e.region = ', e);\n              // console.log('e.region.start = ', e.region.start);\n              // console.log('e.region.end = ', e.region.end);\n\n              // setRegions({ [e.region.id]: e.region })\n              if (e.region.start !== regions[0] || e.region.end !== regions[1]) {\n                setRegions([e.region.start, e.region.end]);\n                context.handles['setZoomFragment']([Math.round(e.region.start), Math.round(e.region.end)])\n              }\n            }}\n            onRegionClick={handleRegionClick}\n              onRegionOut={() => context.handles.setPlaying(false)}\n              regions={\n                {\n                  // One: {\n                  //   id: 'One',\n                  //   start: regions[0],\n                  //   end: regions[1],\n                  //   color: 'rgba(100, 149, 240, 0.3)',\n                  // },\n                }\n              }\n          />\n          </ReactWaves>\n        </div>\n\n        {/* <div className='x_player_view'>\n          <div className=\"x_player_zoom0\">\n            <div onClick={() => zoom('out')} className=\"x_player_zoom_button\">\n              <div className=\"ico ico--40\"><div>zoom_out</div></div>\n            </div>\n            <div onClick={() => zoom('in')} className=\"x_player_zoom_button\">\n              <div className=\"ico ico--40\"><div>zoom_in</div></div>\n            </div>\n          </div>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}