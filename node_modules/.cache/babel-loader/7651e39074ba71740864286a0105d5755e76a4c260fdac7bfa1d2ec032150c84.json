{"ast":null,"code":"var _jsxFileName = \"/Users/murzik/Desktop/React learning/torsunov/src/components/Tracks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport torsunov1 from '../audio/torsunov.mp3';\nimport { Player } from './Player';\nimport { Context } from '../context';\nimport uniqid from \"uniqid\";\nimport { ScrollContainer } from 'react-indiana-drag-scroll';\nimport 'react-indiana-drag-scroll/dist/style.css';\nimport { Scroll } from './Scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TracksComponent(props) {\n  _s();\n  const context = useContext(Context);\n  const trackRef = useRef(null); // Step 1: Create a ref\n\n  // const [data, setData] = useState([])\n\n  // // useEffect(() => {\n  // //   fetch('https://flask.dev.transcribe.torsunov.ru/get_all_data_for_editing?media=829086844a3211eea42102420a000003')\n\n  // //     .then(response => response.json())\n  // //     .then(data => {\n  // //       if (Array.isArray(data) && data.length > 0) {\n  // //         setData(data[0]);\n  // //       }\n  // //     })\n  // //     .catch(error => {\n  // //       console.error(\"Error fetching data: \", error);\n  // //     });\n  // // }, []);\n\n  const zoomLevel = 30;\n  let dragStartX = 0;\n\n  // const handleDragStart = (e, trackId) => {\n  //   dragStartX = e.clientX;\n  // };\n\n  // const handleOnDrop = (e, trackId) => {\n  //   const dragEndX = e.clientX;\n  //   const dragDistance = (dragEndX - dragStartX) * zoomLevel;\n\n  //   setData(prevData => {\n  //     return prevData.map(track => {\n  //       if (track.id === trackId) {\n  //         return {\n  //           ...track,\n  //           start: track.start + dragDistance\n  //         };\n  //       }\n  //       return track;\n  //     });\n  //   });\n  // };\n\n  useEffect(() => {\n    // Step 2: Use the ref inside a useEffect to scroll based on audioTime\n    if (trackRef.current) {\n      const totalTrackWidth = trackRef.current.scrollWidth;\n      const relativePosition = context.state.zoomFragment[0] / context.state.audioDuration;\n      const newScrollPosition = totalTrackWidth * relativePosition;\n      trackRef.current.scrollLeft = newScrollPosition;\n    }\n  }, [context.state.zoomFragment, context.state.audioDuration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c c--bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"width width--100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"x_tracks0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"x_track\",\n          ref: trackRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x_track_playback\",\n            style: {\n              width: context.state['zoomFragment'][0] ? `${context.state['zoomFragment'][0] / zoomLevel}px` : 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x_track_all_fragments\",\n            style: {\n              width: context.state['audioDuration'] ? `${context.state['audioDuration'] / zoomLevel + 20}px` : 'auto'\n            },\n            children: context.state['translationData'].map(oneTrack => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x_track_fragment\",\n              draggable: \"true\"\n              // onDragStart={(e) => handleDragStart(e, oneTrack.id)}\n              // onDragOver={(e) => e.preventDefault()}  // Required to allow dropping on this element\n              // onDrop={(e) => handleOnDrop(e, oneTrack.id)}\n              ,\n              style: {\n                left: oneTrack['start'] / zoomLevel,\n                width: oneTrack['length'] / zoomLevel\n              },\n              children: [/*#__PURE__*/_jsxDEV(Player, {\n                mp3: `https://flask.dev.transcribe.torsunov.ru/${oneTrack['file']}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"x_track_cc\",\n                children: [oneTrack['captions'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, `${context.state['mediaId']}_${oneTrack['id']}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(TracksComponent, \"s5GyR5RWgIUEUTeLnAR14qzUD8s=\");\n_c = TracksComponent;\nexport const Tracks = /*#__PURE__*/React.memo(TracksComponent);\n_c2 = Tracks;\nvar _c, _c2;\n$RefreshReg$(_c, \"TracksComponent\");\n$RefreshReg$(_c2, \"Tracks\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","torsunov1","Player","Context","uniqid","ScrollContainer","Scroll","jsxDEV","_jsxDEV","TracksComponent","props","_s","context","trackRef","zoomLevel","dragStartX","current","totalTrackWidth","scrollWidth","relativePosition","state","zoomFragment","audioDuration","newScrollPosition","scrollLeft","className","children","ref","style","width","fileName","_jsxFileName","lineNumber","columnNumber","map","oneTrack","draggable","left","mp3","_c","Tracks","memo","_c2","$RefreshReg$"],"sources":["/Users/murzik/Desktop/React learning/torsunov/src/components/Tracks.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\n\nimport torsunov1 from '../audio/torsunov.mp3';\nimport { Player } from './Player';\nimport { Context } from '../context';\nimport uniqid from \"uniqid\";\n\nimport { ScrollContainer } from 'react-indiana-drag-scroll';\nimport 'react-indiana-drag-scroll/dist/style.css'\nimport { Scroll } from './Scroll';\n\n\n\nfunction TracksComponent(props) {\n\n  const context = useContext(Context);\n\n  const trackRef = useRef(null);  // Step 1: Create a ref\n\n  // const [data, setData] = useState([])\n\n  // // useEffect(() => {\n  // //   fetch('https://flask.dev.transcribe.torsunov.ru/get_all_data_for_editing?media=829086844a3211eea42102420a000003')\n\n  // //     .then(response => response.json())\n  // //     .then(data => {\n  // //       if (Array.isArray(data) && data.length > 0) {\n  // //         setData(data[0]);\n  // //       }\n  // //     })\n  // //     .catch(error => {\n  // //       console.error(\"Error fetching data: \", error);\n  // //     });\n  // // }, []);\n\n  const zoomLevel = 30;\n\n  let dragStartX = 0;\n\n  // const handleDragStart = (e, trackId) => {\n  //   dragStartX = e.clientX;\n  // };\n\n  // const handleOnDrop = (e, trackId) => {\n  //   const dragEndX = e.clientX;\n  //   const dragDistance = (dragEndX - dragStartX) * zoomLevel;\n\n  //   setData(prevData => {\n  //     return prevData.map(track => {\n  //       if (track.id === trackId) {\n  //         return {\n  //           ...track,\n  //           start: track.start + dragDistance\n  //         };\n  //       }\n  //       return track;\n  //     });\n  //   });\n  // };\n\n\n  useEffect(() => {\n    // Step 2: Use the ref inside a useEffect to scroll based on audioTime\n    if (trackRef.current) {\n      const totalTrackWidth = trackRef.current.scrollWidth;\n      const relativePosition = context.state.zoomFragment[0] / context.state.audioDuration;\n      const newScrollPosition = totalTrackWidth * relativePosition;\n      trackRef.current.scrollLeft = newScrollPosition;\n    }\n  }, [context.state.zoomFragment, context.state.audioDuration]);\n\n  return (\n    <div className=\"c c--bg\">\n      <div className=\"width width--100\">\n        <div className=\"x_tracks0\">\n\n          <div className=\"x_track\"\n            ref={trackRef}\n          >\n\n            <div className=\"x_track_playback\"\n              style={{\n                width: context.state['zoomFragment'][0] ? `${context.state['zoomFragment'][0] / zoomLevel}px` : 'auto'\n              }}\n            />\n\n            {/* <Scroll> */}\n            <div\n              className='x_track_all_fragments'\n              style={{\n                width: context.state['audioDuration'] ? `${context.state['audioDuration'] / zoomLevel + 20}px` : 'auto'\n              }}>\n\n              {context.state['translationData'].map(oneTrack => (\n              <div\n                  key={`${context.state['mediaId']}_${oneTrack['id']}`}\n                className=\"x_track_fragment\"\n                draggable=\"true\"\n                // onDragStart={(e) => handleDragStart(e, oneTrack.id)}\n                // onDragOver={(e) => e.preventDefault()}  // Required to allow dropping on this element\n                // onDrop={(e) => handleOnDrop(e, oneTrack.id)}\n                style={{\n                  left: oneTrack['start'] / zoomLevel,\n                  width: oneTrack['length'] / zoomLevel\n                }}\n              >\n                <Player mp3={`https://flask.dev.transcribe.torsunov.ru/${oneTrack['file']}`}>\n                </Player>\n                <div className=\"x_track_cc\">\n                  {oneTrack['captions']}<br />\n                  {/* {oneTrack['file']} */}\n                </div>\n\n              </div>\n            ))}\n            </div>\n            {/* </Scroll> */}\n\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport const Tracks = React.memo(TracksComponent);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}