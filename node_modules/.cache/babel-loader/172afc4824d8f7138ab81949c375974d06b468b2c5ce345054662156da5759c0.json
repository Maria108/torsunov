{"ast":null,"code":"var _jsxFileName = \"/Users/murzik/Desktop/React learning/torsunov/src/components/PlayerChapters.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { Context } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PlayerChapters(props) {\n  _s();\n  const context = useContext(Context);\n  const segmentsQuantity = Math.round(100 / context.state['activeSegmentLength']);\n  const segmentPercentage = context.state['activeSegmentLength'];\n  const handleSegmentClick = index => {\n    const startTimeInMs = context.state['audioDuration'] * segmentPercentage * index / 100;\n    const endTimeInMs = startTimeInMs + context.state['audioDuration'] * segmentPercentage / 100;\n    context.handles['setZoomFragment']([Math.round(startTimeInMs), Math.round(endTimeInMs)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"x_player_timeline_presets\",\n    style: {\n      top: '0.8em'\n    },\n    children: Array.from({\n      length: segmentsQuantity\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"x_player_timeline_one-preset\",\n      onClick: () => handleSegmentClick(index),\n      style: {\n        width: `${segmentPercentage}%`\n      }\n    }, `${context.state['mediaId']}_${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerChapters, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c = PlayerChapters;\nvar _c;\n$RefreshReg$(_c, \"PlayerChapters\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useContext","Link","withRouter","styled","css","Context","jsxDEV","_jsxDEV","PlayerChapters","props","_s","context","segmentsQuantity","Math","round","state","segmentPercentage","handleSegmentClick","index","startTimeInMs","endTimeInMs","handles","className","style","top","children","Array","from","length","map","_","onClick","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/murzik/Desktop/React learning/torsunov/src/components/PlayerChapters.js"],"sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport styled, { css } from 'styled-components';\nimport { Context } from '../context';\n\nexport function PlayerChapters(props) {\n  const context = useContext(Context);\n\n  const segmentsQuantity = Math.round(100 / context.state['activeSegmentLength']);\n  const segmentPercentage = context.state['activeSegmentLength'];\n\n  const handleSegmentClick = (index) => {\n    const startTimeInMs = (context.state['audioDuration'] * segmentPercentage * index) / 100;\n    const endTimeInMs = startTimeInMs + (context.state['audioDuration'] * segmentPercentage) / 100;\n    context.handles['setZoomFragment']([Math.round(startTimeInMs), Math.round(endTimeInMs)]);\n  };\n\n  return (\n    <div className=\"x_player_timeline_presets\" style={{ top: '0.8em' }}>\n      {Array.from({ length: segmentsQuantity }).map((_, index) => (\n        <div\n          key={`${context.state['mediaId']}_${index}`}\n          className=\"x_player_timeline_one-preset\"\n          onClick={() => handleSegmentClick(index)}\n          style={{ width: `${segmentPercentage}%` }}\n        />\n      ))}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACxE,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,OAAOC,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,OAAO,GAAGX,UAAU,CAACK,OAAO,CAAC;EAEnC,MAAMO,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGH,OAAO,CAACI,KAAK,CAAC,qBAAqB,CAAC,CAAC;EAC/E,MAAMC,iBAAiB,GAAGL,OAAO,CAACI,KAAK,CAAC,qBAAqB,CAAC;EAE9D,MAAME,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,aAAa,GAAIR,OAAO,CAACI,KAAK,CAAC,eAAe,CAAC,GAAGC,iBAAiB,GAAGE,KAAK,GAAI,GAAG;IACxF,MAAME,WAAW,GAAGD,aAAa,GAAIR,OAAO,CAACI,KAAK,CAAC,eAAe,CAAC,GAAGC,iBAAiB,GAAI,GAAG;IAC9FL,OAAO,CAACU,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAACR,IAAI,CAACC,KAAK,CAACK,aAAa,CAAC,EAAEN,IAAI,CAACC,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC;EAC1F,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,2BAA2B;IAACC,KAAK,EAAE;MAAEC,GAAG,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAChEC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEhB;IAAiB,CAAC,CAAC,CAACiB,GAAG,CAAC,CAACC,CAAC,EAAEZ,KAAK,kBACrDX,OAAA;MAEEe,SAAS,EAAC,8BAA8B;MACxCS,OAAO,EAAEA,CAAA,KAAMd,kBAAkB,CAACC,KAAK,CAAE;MACzCK,KAAK,EAAE;QAAES,KAAK,EAAG,GAAEhB,iBAAkB;MAAG;IAAE,GAHpC,GAAEL,OAAO,CAACI,KAAK,CAAC,SAAS,CAAE,IAAGG,KAAM,EAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI5C,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CAxBeF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}