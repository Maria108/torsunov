{"ast":null,"code":"var _jsxFileName = \"/Users/murzik/Desktop/React learning/torsunov/src/components/Layout.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState, useContext, useParams } from 'react';\nimport { Link, withRouter, useLocation } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { Head } from './Head';\nimport { PlayerMain } from './PlayerMain';\nimport { Context } from '../context';\nimport { Tracks } from './Tracks';\nimport PlayerScrubbr from './PlayerScrubbr';\nimport { PlayerTop } from './PlayerTop';\nimport { Preloader } from './Preloader';\nimport { Start } from './Start';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LayoutComponent() {\n  _s();\n  const context = useContext(Context);\n\n  // const { mediaId } = useParams();\n  const location = useLocation();\n  const mediaId = location.pathname.split('/')[1];\n  const queryParams = new URLSearchParams(location.search);\n  const name = queryParams.get('name');\n  const lang = queryParams.get('lang');\n  useEffect(() => {\n    if (mediaId && context.state['mediaId'] !== mediaId) {\n      context.handles.setMediaId(mediaId);\n      context.handles.setName(name);\n      context.handles.setLang(lang);\n    }\n  }, [mediaId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !context.state['mp3'] && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, this), context.state['mp3'] && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlayerTop, {\n        children: /*#__PURE__*/_jsxDEV(PlayerScrubbr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerMain, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tracks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"X1: \", context.state['zoomFragment'][0], \"\\xA0|\\xA0 X2: \", context.state['zoomFragment'][1], \"\\xA0|\\xA0 Length: \", context.state['audioDuration'], \"\\xA0|\\xA0 MediaId: \", context.state['mediaId']]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LayoutComponent, \"kJK4fNZy5Au61HaprNDfMdpy8HA=\", false, function () {\n  return [useLocation];\n});\n_c = LayoutComponent;\nexport const Layout = /*#__PURE__*/React.memo(LayoutComponent);\n_c2 = Layout;\nvar _c, _c2;\n$RefreshReg$(_c, \"LayoutComponent\");\n$RefreshReg$(_c2, \"Layout\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useContext","useParams","Link","withRouter","useLocation","styled","css","Head","PlayerMain","Context","Tracks","PlayerScrubbr","PlayerTop","Preloader","Start","jsxDEV","_jsxDEV","_Fragment","LayoutComponent","_s","context","location","mediaId","pathname","split","queryParams","URLSearchParams","search","name","get","lang","state","handles","setMediaId","setName","setLang","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Layout","memo","_c2","$RefreshReg$"],"sources":["/Users/murzik/Desktop/React learning/torsunov/src/components/Layout.js"],"sourcesContent":["import React, { Fragment, useEffect, useState, useContext, useParams } from 'react'\nimport { Link, withRouter, useLocation } from 'react-router-dom'\nimport styled, { css } from 'styled-components';\nimport { Head } from './Head';\nimport { PlayerMain } from './PlayerMain';\nimport { Context } from '../context';\n\nimport { Tracks } from './Tracks';\n\nimport PlayerScrubbr from './PlayerScrubbr';\nimport { PlayerTop } from './PlayerTop';\nimport { Preloader } from './Preloader';\nimport { Start } from './Start';\n\nexport function LayoutComponent() {\n  const context = useContext(Context);\n\n\n  // const { mediaId } = useParams();\n  const location = useLocation();\n  const mediaId = location.pathname.split('/')[1];\n\n  const queryParams = new URLSearchParams(location.search);\n  const name = queryParams.get('name');\n  const lang = queryParams.get('lang');\n\n\n  useEffect(() => {\n    if (mediaId && context.state['mediaId'] !== mediaId) {\n      context.handles.setMediaId(mediaId)\n      context.handles.setName(name)\n      context.handles.setLang(lang)\n    }\n  }, [mediaId])\n\n\n\n  return (\n    <>\n\n      <Start />\n\n      <Head />\n\n      {!context.state['mp3'] && <Preloader />}\n\n      {context.state['mp3'] && <>\n        <PlayerTop>\n\n        <PlayerScrubbr />\n      </PlayerTop>\n\n\n        <PlayerMain />\n\n        <Tracks />\n      </>}\n\n      <p>\n      X1: {context.state['zoomFragment'][0]}&nbsp;|&nbsp;\n      X2: {context.state['zoomFragment'][1]}&nbsp;|&nbsp;\n        Length: {context.state['audioDuration']}&nbsp;|&nbsp;\n        MediaId: {context.state['mediaId']}</p>\n    </>\n  )\n}\n\nexport const Layout = React.memo(LayoutComponent);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}